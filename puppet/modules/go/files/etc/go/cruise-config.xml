<?xml version="1.0" encoding="utf-8"?>
<cruise xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="cruise-config.xsd" schemaVersion="60">
  <server artifactsdir="artifacts" serverId="106df03c-634c-4857-92a6-af150fbbb0d7">
    <license user="OpenMRS">XFME9J9EMiQYFddyOVzUXqqDf9VUd6c4ripA+0DLNqZzVudyysez4aiIftNM&#xD;
wiCyWzy15KfpuGvpMtdjqY56AzASXny7L9IIAo9X21TPoTqAWhXGxTkBIF2b&#xD;
ep7gguCDI/oVN7la7fUqR/VcuHD7mYBBzkep5esxalWyw+lM/R9KwiRHkSmT&#xD;
EpqpgdeBV/p1I6Q4VqvV14oN+iU0sbHDhBd2x0I76JGrb0BhE7ZSOtfp69J4&#xD;
PLunva9HkZ+ykVSOTHNY6NCVlRiQZmGBhzAebupXtuoMSMGMt7cVM0oS5mmt&#xD;
6Dg3aBCkI2VdueM7piWbiurXbfesHs1dIX4KFvXLUw==</license>
    <security>
      <passwordFile path="/etc/go/htpasswd" />
    </security>
  </server>
  <pipelines group="OpenMRS-CPM">
    <pipeline name="ProposalModule" labeltemplate="${COUNT}-${git}" isLocked="true">
      <environmentvariables>
        <variable name="JAVA_HOME">
          <value>/usr/java/latest</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="https://github.com/OpenMRS-Australia/openmrs-cpm.git" materialName="git" />
      </materials>
      <stage name="CompileTestPackage" cleanWorkingDir="true">
        <jobs>
          <job name="CompileTestPackage">
            <tasks>
              <exec command="./go" args="clean package">
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="**/*.omod" />
              <artifact src="**/*jar-with-dependencies.jar" />
              <test src="omod/target/surefire-reports" />
              <test src="api/target/surefire-reports" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="ProposalModule-CI" labeltemplate="${proposalModule}.${COUNT}">
      <materials>
        <pipeline pipelineName="ProposalModule" stageName="CompileTestPackage" materialName="proposalModule" />
        <git url="https://github.com/openmrs-australia/configuration-master" materialName="buildTools" />
      </materials>
      <stage name="deployment" cleanWorkingDir="true">
        <jobs>
          <job name="deploy">
            <tasks>
              <fetchartifact pipeline="ProposalModule" stage="CompileTestPackage" job="CompileTestPackage" srcdir="omod/target" dest="omod">
                <runif status="passed" />
              </fetchartifact>
              <exec command="./go">
                <arg>node:deploy_omod[ec2-54-245-143-28.us-west-2.compute.amazonaws.com]</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="**/*.omod" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="functionalTests" cleanWorkingDir="true">
        <jobs>
          <job name="runTests">
            <environmentvariables>
              <variable name="openmrs_username">
                <value>admin</value>
              </variable>
              <variable name="openmrs_password">
                <value>OpenMRS1</value>
              </variable>
              <variable name="openmrs_server">
                <value>ec2-54-245-143-28.us-west-2.compute.amazonaws.com:8080</value>
              </variable>
            </environmentvariables>
            <tasks>
              <fetchartifact pipeline="ProposalModule" stage="CompileTestPackage" job="CompileTestPackage" srcdir="functional-tests/target">
                <runif status="passed" />
              </fetchartifact>
              <exec command="bash">
                <arg>run-functional-tests.sh</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <test src="functional-test.xml" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="ProposalModule-QA" labeltemplate="${proposalModule-CI}.${COUNT}">
      <materials>
        <pipeline pipelineName="ProposalModule-CI" stageName="deployment" materialName="proposalModule-CI" />
        <git url="https://github.com/openmrs-australia/configuration-master" materialName="buildTools" />
      </materials>
      <stage name="deployment">
        <approval type="manual" />
        <jobs>
          <job name="deploy">
            <tasks>
              <exec command="./go">
                <arg>clean</arg>
                <runif status="passed" />
              </exec>
              <fetchartifact pipeline="ProposalModule-CI" stage="deployment" job="deploy" srcdir="omod/target" dest="omod">
                <runif status="passed" />
              </fetchartifact>
              <exec command="./go">
                <arg>node:deploy_omod[ec2-54-245-1-154.us-west-2.compute.amazonaws.com]</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </pipelines>
  <pipelines group="Infrastructure">
    <pipeline name="Infrastructure" isLocked="true">
      <environmentvariables>
        <variable name="SETTINGS_FILE">
          <value>/var/go/settings.yaml</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="https://github.com/khaong/configuration-master" />
      </materials>
      <stage name="PuppetSyntax">
        <jobs>
          <job name="PuppetSyntax">
            <tasks>
              <exec command="./go" args="test:puppet_syntax" />
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="Package">
        <jobs>
          <job name="Package">
            <tasks>
              <exec command="./go" args="package:puppet" />
            </tasks>
            <artifacts>
              <artifact src="build/boot.tar.gz" dest="build" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="Publish">
        <jobs>
          <job name="Publish">
            <tasks>
              <fetchartifact pipeline="Infrastructure" stage="Package" job="Package" srcdir="build">
                <runif status="passed" />
              </fetchartifact>
              <exec command="./go" args="aws:publish_bootstrap" />
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </pipelines>
  <agents>
    <agent hostname="ip-10-248-4-119" ipaddress="10.248.4.119" uuid="b040da5b-8ab7-440b-aeab-57f51b89da80" />
  </agents>
</cruise>

